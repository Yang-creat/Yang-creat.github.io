<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>思维模型</title>
      <link href="/2019/%E6%80%9D%E7%BB%B4%E6%A8%A1%E5%9E%8B/%E6%80%9D%E7%BB%B4%E6%A8%A1%E5%9E%8B/"/>
      <url>/2019/%E6%80%9D%E7%BB%B4%E6%A8%A1%E5%9E%8B/%E6%80%9D%E7%BB%B4%E6%A8%A1%E5%9E%8B/</url>
      
        <content type="html"><![CDATA[<h2 id="“原因”思维模型"><a href="#“原因”思维模型" class="headerlink" title="“原因”思维模型"></a>“原因”思维模型</h2><blockquote><p>此思维模型概括了两种常见的<strong>思索原因</strong>的模型</p></blockquote><ul><li>其一，<strong>状态原因</strong>思维模型：当遇到各种状态问题时，比如说‘心头压力大，呼吸沉重’的原因是什么，可直接考虑自身属性的因素（如实力、状态）、周围环境的因素。</li><li>其二，<strong>行为原因</strong>思维模型：当思考某件事或某个行为原因时，比如说”为什么要思索’心头压力大，呼吸沉重’的原因是什么“，此‘要’字尤为重要，表现出目的，因此直接考虑该行为的目的和结果即可，即：目的和结果是可以解决当前不舒服的状态，从而使得解决问题更高效。<br><center><img src="https://github.com/Yang-creat/Images/blob/master/%E6%80%9D%E7%B6%AD%E6%A8%A1%E5%9E%8B/why%E6%A8%A1%E5%9E%8B.png?raw=true" alt="原因思维模型"></center></li></ul><h2 id="“API”思维模型"><a href="#“API”思维模型" class="headerlink" title="“API”思维模型"></a>“API”思维模型</h2><blockquote><p>将当我们遇到问题时，解决问题的步骤抽象为一种模型，即<strong>API思维模型</strong>，此处<strong>API</strong>引用了计算机术语‘接口’，即输入一个参数，返回一个参数，其中过程是一定的（由API函数决定），我们遇到一个参数（问题）时，开始调用一个API的过程，即成为API思维模型。</p></blockquote><ul><li>此模型，即<strong>遇到问题时，直接调用已有模型的一种思维方式</strong>。似乎有点抽象，有点像套中套，俄罗斯套娃，举个栗子，比如，当我们需要思考原因时，直接调用上述的<em>原因思维模型</em>，即<strong>API思维模型</strong><br><center><img src="https://github.com/Yang-creat/Images/blob/master/%E6%80%9D%E7%B6%AD%E6%A8%A1%E5%9E%8B/API%E6%A8%A1%E5%9E%8B.png?raw=true" alt="API思维模型"></center></li><li>API思维模型非常重要，它的核心思想是将任何解决问题的方法抽象为API模型，因此<strong>大大地提高解决问题的效率</strong>（直接调用即可），故所需做的就是构建各种思维模型，如原因思维模型。<font color="red"><strong>其实各种知识都是API思维模型，我们所做的就是将其构建成模型并且熟练地使用罢了。</strong></font></li></ul><h2 id="“记忆”思维模型"><a href="#“记忆”思维模型" class="headerlink" title="“记忆”思维模型"></a>“记忆”思维模型</h2><blockquote><p>生活、学习各个方面都离不开记忆，因此有一种好的记忆方法尤为重要，此模型提高了一种行之有效的记忆模型。</p></blockquote><ul><li>当遇到需要记忆的事物之时，比如上述的两种思维模型，必须将其形象化成为一个例子并熟练使用，这样在下次遇到后，举一反三，从而掌握模型。<br><center><img src="https://github.com/Yang-creat/Images/blob/master/%E6%80%9D%E7%B6%AD%E6%A8%A1%E5%9E%8B/%E8%AE%B0%E5%BF%86%E6%A8%A1%E5%9E%8B.png?raw=true" alt="记忆模型"></center></li></ul><blockquote><p>以上各种思维模型中，并非简单的独立或者从属关系，而是互相嵌套，有些复杂，需要重复理解。</p></blockquote><h3 id="下一节预告，以上思维模型在学习之中的应用，敬请期待！"><a href="#下一节预告，以上思维模型在学习之中的应用，敬请期待！" class="headerlink" title="下一节预告，以上思维模型在学习之中的应用，敬请期待！"></a>下一节预告，以上思维模型在学习之中的应用，敬请期待！</h3>]]></content>
      
      
      <categories>
          
          <category> 思维模型 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Hexo+GitHub搭建个人博客总结-2</title>
      <link href="/2019/%E5%B7%A5%E5%85%B7/Hexo/Hexo-GitHub%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%80%BB%E7%BB%93-2/"/>
      <url>/2019/%E5%B7%A5%E5%85%B7/Hexo/Hexo-GitHub%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%80%BB%E7%BB%93-2/</url>
      
        <content type="html"><![CDATA[<h2 id="第二步：主题个性化设置"><a href="#第二步：主题个性化设置" class="headerlink" title="第二步：主题个性化设置"></a>第二步：主题个性化设置</h2><h3 id="一-网页信息设置"><a href="#一-网页信息设置" class="headerlink" title="一. 网页信息设置"></a>一. 网页信息设置</h3><ol><li>网页名称<br>打开站点配置文件<strong>_config</strong>，修改<strong>Site-title</strong>即可。</li><li>post网址名称<br>打开站点配置文件<strong>_config</strong>，设置URL-permalink格式：permalink格式: :year/:month/:day/:category/:title/（其中每项可删减），随后更改scaffolds-post，在其中添加permalink: （此文件为post模板，之后新建的帖子都含有permalink），当通过<strong>hexo n post ‘filename’</strong>新建一个post后，不填写即默认为以上格式。</li></ol><h3 id="二-左侧边栏设置"><a href="#二-左侧边栏设置" class="headerlink" title="二. 左侧边栏设置"></a>二. 左侧边栏设置</h3><ol><li>主页头像<br>打开主题配置文件<strong>theme-_config</strong>文件，修改<strong>avatar: &amp; favicon</strong>所指的文件即可，文件目录为<strong>source-img</strong>，将自己的图片添加进改成相应的名称即可。</li><li>主页文章<br>打开<strong>layout-indexs</strong>编辑修改即可。</li><li>联系方式图标<br>打开<strong>theme-_config</strong>文件，修改*<em>link: *</em>即可。</li><li>左侧目录<br>打开站点配置文件<strong>_config</strong>，在<strong>category &amp; Tag- category_map:</strong>中添加分类的标签名称，若有多级，则按<strong>工具&gt;hexo</strong>格式进行添加，随后在每篇新建的post的<strong>categories</strong>中设置分类即可，如：<br>categories:-工具 -hexo。</li><li><strong>关于</strong>信息<br>打开<strong>source-about-index</strong>进行修改即可，如若无about文件夹，则可以通过<strong>hexo n post “about”</strong>进行建立。</li></ol><h3 id="三-列表设置"><a href="#三-列表设置" class="headerlink" title="三. 列表设置"></a>三. 列表设置</h3><ol><li>搜索功能<br>打开<strong>theme-_config</strong>文件，开启<strong>searchAll</strong>即可。</li><li>列表背景<br>打开<strong>theme-_config</strong>文件，开启<strong>article_bg_img:</strong>，更换图片网址即可。</li></ol><h3 id="四-内容页设置"><a href="#四-内容页设置" class="headerlink" title="四.内容页设置"></a>四.内容页设置</h3><ol><li>字数统计<br>注意：需要安装插件。</li><li>文末声明<br><strong>article_text:</strong>自行添加。</li><li>版权信息<br><strong>copyright:</strong>可关闭开启，无法修改（代码中）。</li><li>底部信息<br><strong>bottom_text:</strong>可修改/关闭。</li></ol><hr><h2 id="所遇问题"><a href="#所遇问题" class="headerlink" title="所遇问题"></a><center>所遇问题</center></h2><ol><li>为什么加了个空格就显示不出生成密匙图片</li><li>true写成ture错误</li><li>注意字数统计缺少插件不能开启，否则无法启动</li><li>如何更改网页地址为<a href="http://www.shuoit.net" target="_blank" rel="noopener">www.shuoit.net</a></li><li>menu菜单下有几个功能页，这些功能页如何实现的<blockquote><p>通过特定的修改config中相对应的名称/以及建立相对应的文件夹即可。内容在哪里修改：通过修改theme-config-menu项冒号后面的名称，即可指向Blog文件下source中对应名称的文件（可通过hexo new page 文件名 新建该类型文件？？还可以新建其他类型的文件吗，对应的功能是什么，注意：只有通过改方法建立的文件夹才能导入到对应标签的网页中），因此通过修改此文件可以修改各标签所对应的内容。？？文件内容格式如何优化</p></blockquote></li><li>每次修改配置内容后需要重新hexo s启动</li><li>public文件是怎么出来的：在将本地配置上传至远程服务器时，各文件保存在public中</li><li>网站上所有格式的修改应当在theme-config中完成</li><li>deploy_git中文件应该是push到git中的文件</li><li>JSON格式是什么：基于JS编程的一个子集，是什么鬼东西</li><li>permalink：为永久链接，意为指向一个特定的网络日志的标识符</li><li>scaffolds，为新建页面的模板，新建post/page/draft都是根据此模板完成的，可在其中加入一些默认值</li><li>category &amp;Tag设置的是什么</li><li>lang：en  设置的是什么</li><li>url设置的域名有什么用</li><li>hexo提交到github后会自动将about文件转换为html文件</li><li>public文件夹中存储着当hexo上传文件至git后，产生的source中的各文件的网址</li><li>theme-config中可设置menu分类的格式，返回到各路径中的文件</li><li>每个文档可设置一些默认属性，如名称/日期/标签/链接/分类</li><li>可以让menu中分类标签指向各种类吗：通过建立对应文件，设值type即可</li><li>将图片放在theme-source-img下即可</li></ol>]]></content>
      
      
      <categories>
          
          <category> 工具 </category>
          
          <category> Hexo </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Hexo+GitHub搭建个人博客总结-1</title>
      <link href="/2019/%E5%B7%A5%E5%85%B7/Hexo/Hexo+GitHub%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%80%BB%E7%BB%93-1/"/>
      <url>/2019/%E5%B7%A5%E5%85%B7/Hexo/Hexo+GitHub%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%80%BB%E7%BB%93-1/</url>
      
        <content type="html"><![CDATA[<h2 id="第一步：配置环境准备"><a href="#第一步：配置环境准备" class="headerlink" title="第一步：配置环境准备"></a>第一步：配置环境准备</h2><hr><h3 id="一-软件准备"><a href="#一-软件准备" class="headerlink" title="一. 软件准备"></a>一. 软件准备</h3><ol><li>下载软件:<br><a href="https://nodejs.org/en/" target="_blank" rel="noopener">Node.js</a> &amp; <a href="https://git-scm.com/downloads" target="_blank" rel="noopener">Git</a>（建议先学习<a href="https://www.bilibili.com/video/av10475153" target="_blank" rel="noopener">Github</a>)<br> 记住下载目录，一般管理好电脑目录，比如<br><center><img src="https://github.com/Yang-creat/Images/blob/master/Hexo%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA%E6%88%AA%E5%9B%BE/%E4%B8%8B%E8%BD%BD%E7%9B%AE%E5%BD%95.png?raw=true" alt="下载目录"></center></li><li>安装软件<br> 对于Node.js，注意此步选择第二项，可在Window10下的powershell命令行中运行 <br><center><img src="https://github.com/Yang-creat/Images/blob/master/Hexo%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA%E6%88%AA%E5%9B%BE/Node.js%E5%AE%89%E8%A3%85.png?raw=true" alt="Node.js安装"></center></li><li>检测版本<br>按住Win + R输入cmd，打开windows命令行，依次输入<strong>node -v</strong> / <strong>npm -v</strong>/ <strong>git –version</strong>查看安装软件的版本</li><li>完成安装 <br>如若正确安装，应当显示版本号<br><center><img src="https://github.com/Yang-creat/Images/blob/master/Hexo%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA%E6%88%AA%E5%9B%BE/%E7%89%88%E6%9C%AC%E6%9F%A5%E8%AF%A2.png?raw=true" alt="版本号"></center></li></ol><h3 id="二-GitHub网站配置"><a href="#二-GitHub网站配置" class="headerlink" title="二.GitHub网站配置"></a>二.GitHub网站配置</h3><blockquote><p>完成上一步之后，接下来时GItHub网站的配置</p></blockquote><ol><li><p>注册账号<br><br> 登录网站<a href="https://github.com/" target="_blank" rel="noopener">GitHub</a>，注册账号</p></li><li><p>SSH授权<br><br> 新建好仓库后，即可clone和fork他人的开源代码，但若是需将文件上传到github还需要SSH授权，步骤如下：</p><ul><li>打开Git Bash，输入<strong>ssh-keygen -t rsa</strong> 按3下回车，如图所示：<center><br><img src="https://github.com/Yang-creat/Images/blob/master/Hexo%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA%E6%88%AA%E5%9B%BE/%E7%94%9F%E6%88%90%E5%AF%86%E5%8C%99.png?raw=true" alt="生成密匙"> </center><br>接下来将会在C:\Users\Administrator.ssh目录下生成到id_rsa和id_rsa.pub两个文件，id_rsa是密钥，id_rsa.pub是公钥，将id_rsa.pub的内容添加到GitHub上，本地的id_rsa密钥才能跟GitHub上的id_rsa.pub公钥进行配对，即可授权成功 </li><li>登录GItHUb，点击右上角头像-setting-SSH and GPG keys-复制idrsa.pub中的内容即可<br><center><img src="https://github.com/Yang-creat/Images/blob/master/Hexo%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA%E6%88%AA%E5%9B%BE/GitHub%E4%B8%ADSSH%E8%AE%BE%E7%BD%AE.png?raw=true" alt="SSH设置"></center><center><br><img src="https://github.com/Yang-creat/Images/blob/master/Hexo%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA%E6%88%AA%E5%9B%BE/%E5%A4%8D%E5%88%B6%E5%AF%86%E5%8C%99.png?raw=true" alt="密匙添加"></center></li><li>密匙设置成功后，再次打开Git Bash中输入<strong>ssh -T <a href="mailto:git@github.com" target="_blank" rel="noopener">git@github.com</a></strong>，出现以下提示即设置成功<br><center><img src="https://github.com/Yang-creat/Images/blob/master/Hexo%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA%E6%88%AA%E5%9B%BE/%E5%AF%86%E5%8C%99%E9%AA%8C%E8%AF%81%E6%88%90%E5%8A%9F.png?raw=true" alt="设置成功"></center></li></ul></li><li><p>New Repository<br> 点击New按钮新建Repository<center><br><img src="https://github.com/Yang-creat/Images/blob/master/Hexo%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA%E6%88%AA%E5%9B%BE/github%E6%96%B0%E5%BB%BA%E4%B8%AA%E4%BA%BApage.png?raw=true" alt="新建仓库"></center><br> <em>注意：仓库名必须为</em> <strong><em>用户名+github.io</em></strong></p></li></ol><h3 id="三-本地Blog配置"><a href="#三-本地Blog配置" class="headerlink" title="三. 本地Blog配置"></a>三. 本地Blog配置</h3><blockquote><p>现在开始搭建本地博客，首先新建一个文件夹Blog，打开文件夹，按住Shift后点右键打开Poweshell</p></blockquote><ol><li><p>安装Hexo</p><ul><li>输入指令 <strong>npm install -g hexo</strong><br><center><img src="https://github.com/Yang-creat/Images/blob/master/Hexo%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA%E6%88%AA%E5%9B%BE/hexo-g.png?raw=true" alt="安装hexo"></center></li><li>再次输入指令** npm install hexo –save** 保存文件<br><center><img src="https://github.com/Yang-creat/Images/blob/master/Hexo%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA%E6%88%AA%E5%9B%BE/npm%20%E4%BF%9D%E5%AD%98%E6%96%87%E4%BB%B6.png?raw=true" alt="保存hexo"></center></li><li>输入<strong>hexo -v</strong>查看是否安装成功<br><center><img src="https://github.com/Yang-creat/Images/blob/master/Hexo%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA%E6%88%AA%E5%9B%BE/hexo%E7%89%88%E6%9C%AC%E6%9F%A5%E7%9C%8B.png?raw=true" alt="查看hexo版本"></center></li><li>初始化hexo：<strong>hexo init</strong> （<em>注意：需要在其中新建一个文件夹，将生成的hexo文件</em>）</li></ul></li><li><p>启动本地Hexo服务端</p><ul><li>输入<strong>hexo s</strong>启动本地Hexo服务器，网址输入<strong>locahost：4000</strong> 即可进入本地服务器</li></ul></li><li><p>写帖子</p><ul><li>通过<strong>hexo n post “”</strong>新建帖子（<em>帖子位于source文件夹下</em>）</li></ul></li></ol><h3 id="四-上传至远程Blog"><a href="#四-上传至远程Blog" class="headerlink" title="四.上传至远程Blog"></a>四.上传至远程Blog</h3><blockquote><p>本地写好的博客需要上传至github个人主页中，步骤如下：</p></blockquote><ol><li>修改站点配置文件_config<ul><li>deploy: <ul><li>type: git</li><li>repo（<em>手动添加<em>） 仓库地址，如：</em><a href="https://github.com/Yang-creat/Yang-creat.github.io" target="_blank" rel="noopener">https://github.com/Yang-creat/Yang-creat.github.io</a></em><br><center><img src="https://github.com/Yang-creat/Images/blob/master/Hexo%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA%E6%88%AA%E5%9B%BE/%E4%BF%AE%E6%94%B9_config.png?raw=true" alt="修改文件配置"></center></li></ul></li></ul></li><li>保存修改设置<ul><li>输入<strong>npm install hexo-deployer-git –save</strong></li></ul></li><li>上传<ul><li>输入<strong>hexo g</strong>生成文件</li><li>输入<strong>hexo d</strong>配置远程服务器<br><br><em>注意：修改文件后需要 <strong>hexo clean</strong> 清除public再次重新配置</em></li></ul></li><li>登录远程博客<ul><li>网站输入<strong>http://名称.github.io</strong>即可登录网站。</li></ul></li></ol>]]></content>
      
      
      <categories>
          
          <category> 工具 </category>
          
          <category> Hexo </category>
          
      </categories>
      
      
    </entry>
    
    
  
  
</search>
