<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>更改键盘键位</title>
      <link href="/2019/%E8%AE%A4%E8%AF%86%E7%94%B5%E8%84%91/%E6%9B%B4%E6%94%B9%E9%94%AE%E7%9B%98%E9%94%AE%E4%BD%8D/"/>
      <url>/2019/%E8%AE%A4%E8%AF%86%E7%94%B5%E8%84%91/%E6%9B%B4%E6%94%B9%E9%94%AE%E7%9B%98%E9%94%AE%E4%BD%8D/</url>
      
        <content type="html"><![CDATA[<h2 id="更改键盘键位"><a href="#更改键盘键位" class="headerlink" title="更改键盘键位"></a>更改键盘键位</h2><blockquote><p>常用的电脑的人知道,ctrl是我们常用的键,但是它的位置不太好按,而大写锁定键capslk几乎用不到,但它却占用了黄金键位,不免有些可惜,因此,为何不将其更换为ctrl键?</p></blockquote><h3 id="更改方法如下"><a href="#更改方法如下" class="headerlink" title="更改方法如下"></a>更改方法如下</h3><p>下载软件<a href="https://keytweak.en.softonic.com/" target="_blank" rel="noopener">KeyWeak</a>,更改键位.</p>]]></content>
      
      
      <categories>
          
          <category> 认识电脑 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>关于win10系统输入法问题</title>
      <link href="/2019/%E8%AE%A4%E8%AF%86%E7%94%B5%E8%84%91/%E5%85%B3%E4%BA%8Ewin10%E7%B3%BB%E7%BB%9F%E8%BE%93%E5%85%A5%E6%B3%95%E9%97%AE%E9%A2%98/"/>
      <url>/2019/%E8%AE%A4%E8%AF%86%E7%94%B5%E8%84%91/%E5%85%B3%E4%BA%8Ewin10%E7%B3%BB%E7%BB%9F%E8%BE%93%E5%85%A5%E6%B3%95%E9%97%AE%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<h2 id="关于win10系统输入法问题"><a href="#关于win10系统输入法问题" class="headerlink" title="关于win10系统输入法问题"></a>关于win10系统输入法问题</h2><blockquote><p>对于大多数程序员来说,当输入命令行和打代码的时候,输入法是一个头疼的问题.首先,命令行和代码都需要输入英文,尤其是一些标点符号,只能用英文的才能识别,中文的是错误.当需要输入中文内容时,这就需要中英文来回切换.因此,以下通过将中文输入状态下,标点直接使用英文标点解决这个问题.再者,第二个问题就是,当需要输入时,系统默认的中文状态,而大多数时候需要输入命令行,因此需要切换,不胜其烦.对于这个问题,可以修改默认语言来解决.</p></blockquote><h3 id="修改设置"><a href="#修改设置" class="headerlink" title="修改设置"></a>修改设置</h3><ol><li>打开设置,输入<strong>语言</strong>,点击语言设置<br><center><img src="https://github.com/Yang-creat/Images/blob/master/%E8%BE%93%E5%85%A5%E6%B3%95%E4%BF%AE%E6%94%B9/1.png?raw=true" alt></center></li><li>点击<strong>当前输入法-选项</strong><br><center><img src="https://github.com/Yang-creat/Images/blob/master/%E8%BE%93%E5%85%A5%E6%B3%95%E4%BF%AE%E6%94%B9/2.png?raw=true" alt></center></li><li>点击<strong>微软拼音-选项</strong><br><center><img src="https://github.com/Yang-creat/Images/blob/master/%E8%BE%93%E5%85%A5%E6%B3%95%E4%BF%AE%E6%94%B9/3.png?raw=true" alt></center></li><li>点击<strong>常规</strong><br><center><img src="https://github.com/Yang-creat/Images/blob/master/%E8%BE%93%E5%85%A5%E6%B3%95%E4%BF%AE%E6%94%B9/4.png?raw=true" alt></center></li></ol><p><strong>中文下使用英文标点</strong><br></p><ol start="5"><li><strong>中文时使用英文标点</strong>打开即可<br><center><img src="https://github.com/Yang-creat/Images/blob/master/%E8%BE%93%E5%85%A5%E6%B3%95%E4%BF%AE%E6%94%B9/5.png?raw=true" alt></center></li></ol><p><strong>默认为英文输入</strong><br></p><ol start="6"><li><strong>默认模式</strong>选择英语即可<br><center><img src="https://github.com/Yang-creat/Images/blob/master/%E8%BE%93%E5%85%A5%E6%B3%95%E4%BF%AE%E6%94%B9/6.png?raw=true" alt></center></li></ol><blockquote><p>这样,在每次打开输入窗口时,默认为英文输入法,若需要输入中文,比如chrome浏览器中,需要按shirft转换为中文,但转换一次后该页面不需要再次转换<br><br>另外,输入中文时候的标点为英文,因此,输入中文时不需要来回切换了</p></blockquote><p>补充:</p><ul><li>中文状态下默认为英文的一些标点符号有:<strong>@#$%&amp; [] {} | *</strong></li></ul>]]></content>
      
      
      <categories>
          
          <category> 认识电脑 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>认识电脑结构</title>
      <link href="/2019/%E8%AE%A4%E8%AF%86%E7%94%B5%E8%84%91/%E8%AE%A4%E8%AF%86%E7%94%B5%E8%84%91%E7%BB%93%E6%9E%84/"/>
      <url>/2019/%E8%AE%A4%E8%AF%86%E7%94%B5%E8%84%91/%E8%AE%A4%E8%AF%86%E7%94%B5%E8%84%91%E7%BB%93%E6%9E%84/</url>
      
        <content type="html"><![CDATA[<blockquote><p>电脑一般有以下几个硬件配置：输入设备：键盘、鼠标；处理设备：CPU、内存条、硬盘、显卡、主板；输出设备：显示器；其他设备：电源、风扇。</p></blockquote><h2 id="一、输入设备"><a href="#一、输入设备" class="headerlink" title="一、输入设备"></a>一、输入设备</h2><blockquote><p>输入设备包括<strong>键盘和鼠标</strong>，由于笔记本电脑键盘自带，当然也可以外接键盘， 目前不作考虑；对于鼠标，二三十的无线鼠标用的还不错。</p></blockquote><h2 id="二、处理设备（核心）"><a href="#二、处理设备（核心）" class="headerlink" title="二、处理设备（核心）"></a>二、处理设备（核心）</h2><blockquote><p>电脑的核心组件就是处理设备了，包括<strong>CPU、内存条、硬盘、显卡、主板</strong>，一个电脑性能的好坏取决于它们的性能，然而，很多人对它们都没有认识，甚至不知道电脑中有这些设备，因此，以下，将根据搜集的资料对它们进行介绍。<br><br>1.CPU:处理器，类似商店里的营业员，单核一个人，双核2个人，四核4个人。。。。。<br>2.显卡：处理图像，类似商店外边的女模特，脸蛋好，长的越精致越贵。<br>3.内存：类似店铺营业间，越大摆放的商品越多。<br>4.硬盘：类似店铺的仓库，越大，摆放的越多。硬盘和内存的区别，内存是商品展示（数据从硬盘搬到内存暂存），CPU（类似营业员）将内存的数据进行处理，如果缺数据了，就从硬盘搬到内存，顺手将内存暂时不用的数据搬回硬盘（仓库）。在硬盘（仓库）一个区域划出一块地方，用于暂时保存数据（暂时不用或即将要用的），这个区域就叫虚拟内存。</p></blockquote><ol><li><p>CPU<br><br><center><img src="https://github.com/Yang-creat/Images/blob/master/%E8%AE%A4%E8%AF%86%E8%AE%A1%E7%AE%97%E6%9C%BA/CPU%E7%BC%96%E5%8F%B7.jpg?raw=true" alt="如图所示"></center></p><ul><li>Intel 表示公司名称；</li><li>core表示品牌分类，一般CPU为酷睿(core)、奔腾(pentium)、赛扬(celeron)，其中酷睿&gt;奔腾&gt;赛扬；</li><li>i7是品牌标识符，i3、i5、i7的区别是什么？一般认为i3为双核四线程、i5为四核四线程、i7为四核八线程<blockquote><p>补充概念：CPU个数即CPU芯片个数<br><br>  1.CPU的核心数是指物理上，也就是硬件上存在着几个核心。比如，双核就是包括2个相对独立的CPU核心单元组，四核就包含4个相对独立的CPU核心单元组。<br>  <br>2.线程数是一种逻辑的概念，简单地说，就是模拟出的CPU核心数。比如，可以通过一个CPU核心数模拟出2线程的CPU，也就是说，这个单核心的CPU被模拟成了一个类似双核心CPU的功能。我们从任务管理器的性能标签页中看到的是两个CPU。 比如Inte l赛扬G460是单核心，双线程的CPU，Intel 酷睿i3 3220是双核心 四线程，Intel 酷睿i7 4770K是四核心 八线程 ，Intel 酷睿i5 4570是四核心 四线程等等。 对于一个CPU，线程数总是大于或等于核心数的。一个核心最少对应一个线程，但通过超线程技术，一个核心可以对应两个线程，也就是说它可以同时运行两个线程。<br>  <br>3.CPU的线程数概念仅仅只针对Intel的CPU才有用，因为它是通过Intel超线程技术来实现的，最早应用在Pentium4上。如果没有超线程技术，一个CPU核心对应一个线程。所以，对于AMD的CPU来说，只有核心数的概念，没有线程数的概念。<br>  CPU之所以要增加线程数，是源于多任务处理的需要。线程数越多，越有利于同时运行多个程序，因为线程数等同于在某个瞬间CPU能同时并行处理的任务数。 因此，线程数是一种逻辑的概念，简单地说，就是模拟出的 CPU 核心数。一个核心最少对应一个线程，但英特尔有个超线程技术可以把一个物理线程模拟出两个线程来用，充分发挥 CPU 性能，即一个核心可以有两个到多个线程。<br>  设计决定，intel给他的x86设计了逻辑线程=2<em>物理核心数，ibm的power8是逻辑线程=8</em>物理核心数</p></blockquote></li><li>后面只有三个数字表示第一代，若有四个数字，第一个数字表示第几代一般代数越高，工艺越好，更好的设计，一般性能越好</li><li>第二位数字表示处理器等级，越大则等级越高</li><li>第三位表示核心显卡型号</li><li>第四位表示消耗功率</li><li>后缀的含义<blockquote><p>一般情况下，后缀名反应性能是：H(HK、HQ)＞U＞Y<br>  <br>1、后缀名为H的处理器，通常热设计功耗(TDP)为45W，物理核心数比后两种多，多用于游戏本(HK代表可超频，HQ代表四核)，例如i7-8850H，i9-8950HK，i5-7300HQ等；<br>  <br>2、后缀名U代表低压处理器，TDP一般为15W，多用于超薄商务本，例如i7-6500U，i5-8250U等等，这类CPU性能较差，不适合玩大型游戏，主打低功耗和续航；<br>  <br>3、后缀名Y代表超低压处理器，TDP一般在7W左右，例如i5-8200Y，i7-8500Y，这类CPU多用于平板或无风扇设计的一体本，主打超低功耗和续航。弄清楚这些之后我们就能明白如果比较CPU性能，H和H比，U和U比，Y和Y比，一概而论显然是不合适的。<br>  <br>4、X和XE是最强版本的代号</p></blockquote></li></ul></li><li><p>内存条</p><ul><li>内存条分类<ul><li>主流的 DDR4 内存，常见的工作频率有：<br>  DDR4 2133（入门），<br>  DDR4 2400（中端），<br>  DDR4 2666（高端）。</li><li>上一代的 DDR3 内存，常见的工作频率有：<br>  DDR3 1066（入门），<br>  DDR3 1333（中端），<br>  DDR3 1600（高端）。<blockquote><p>大内存可以提升CPU读取数据的速度，因为CPU从磁盘中读取数据的速度要远小于内存中，而内存可以将所需要的数据储存在内存中，从而使CPU不需要从硬盘中读取。</p></blockquote></li></ul></li></ul></li></ol><ol start="3"><li><p>硬盘</p><ul><li>硬盘分类<ul><li>HDD（机械硬盘）：SATA 3（serial advanced technology attachment）：读取速度100MB/s</li><li>SSD（固态硬盘）：SATA 3：读取速度200-500M/s；PCIe（Peripheral Component Interconnec）：2GB/s.</li></ul></li><li>硬盘选择<ul><li>256GB SSD硬盘 + 1TB HDD<blockquote><p>硬盘影响电脑的相应速度，何为响应速度，即给计算机某个信号，比如打开某个软件，而计算机将该软件呈现在面前的速度。因此，一个好的硬盘会大大提升电脑的响应速度。一般开机速度、软件运行和游戏加载速度会有很大影响，提升上述速度需要提升硬盘性能。</p></blockquote></li></ul></li></ul></li><li><p>显卡：显卡影响电脑图形界面的清晰度和体验感</p><ul><li>显卡分类<ul><li>集成显卡：指以前将显卡集成在主板上的一种显卡，占用内存</li><li>核心显卡：GPU，指集成在处理器中的一种显卡，通过处理器强大的计算能力使得显示图像，有独立的显卡内存</li><li>独立显卡：顾名思义，独立的显卡，有独立显卡配置更高</li></ul></li></ul></li></ol>]]></content>
      
      
      <categories>
          
          <category> 认识电脑 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>LOL锐雯操作</title>
      <link href="/2019/LOL/LOL%E9%94%90%E9%9B%AF%E6%93%8D%E4%BD%9C/"/>
      <url>/2019/LOL/LOL%E9%94%90%E9%9B%AF%E6%93%8D%E4%BD%9C/</url>
      
        <content type="html"><![CDATA[<h2 id="LOL锐雯玩法"><a href="#LOL锐雯玩法" class="headerlink" title="LOL锐雯玩法"></a>LOL锐雯玩法</h2><blockquote><p>本文总结了锐雯基本操作：技能衔接，两种光速QA，秒人连招等。<br><center><img src="https://github.com/Yang-creat/Images/blob/master/LOL/%E9%94%90%E9%9B%AF.jpg?raw=true" alt></center></p></blockquote><h3 id="一、技能衔接"><a href="#一、技能衔接" class="headerlink" title="一、技能衔接"></a>一、技能衔接</h3><blockquote><p>首先，我们需要认识锐雯，她有鼠标右键点击操作以及四个技能QWER（加上被动算第五个）。<br><center><img src="https://github.com/Yang-creat/Images/blob/master/LOL/%E6%8C%89%E9%94%AE%E6%89%8B%E4%BD%8D.png?raw=true" alt="手指键位图"></center></p></blockquote><ol><li><p>右键点击：分两种情况，点击对方目标和地板，移动的基本操作</p><ul><li>点击目标：攻击敌人，即平A，由于平A后有攻击后摇，因此我们需要使用Q技能取消后摇，也就是第一个技能衔接，|| <strong>A+Q</strong> ||</li><li>点击地板：三种作用（1）移动人物（2）改变人物方向，从而控制Q的方向（3）取消Q的后摇，因此又有一个技能连接：|| <strong>Q+走</strong> ||</li></ul></li><li><p>Q技能：小拇指按，主要输出和位移技能</p><ul><li>取消平A后摇，和上面提到的两个操作衔接起来，就是一个核心连接：|| <strong>A+Q+走</strong> ||</li><li>取消技能后摇，从而形成|| <strong>R+Q</strong> ||</li></ul></li><li><p>W技能：无名指按；W技能一般是两种使用时机，直接晕住或者平A过后加W，目的是控住敌人。</p><ul><li>|| <strong>W+Q/九头蛇/右键走</strong> ||：由于W技能有很长的抬刀后摇，因此需要其他技能取消后摇，比如Q/九头蛇/右键。</li><li>|| <strong>平A+W</strong> ||：可以打出更高的伤害。</li></ul></li><li><p>E技能：中指按；用于移动走位/追击敌人/提供护盾/与R一起使用取消R，快速开大。</p><ul><li>|| <strong>E+R+Q</strong> ||：可用于快速开大。</li></ul></li><li><p>R技能：食指按；</p><ul><li>|| <strong>二段R+Q/E</strong>||：可取消R的后摇</li></ul></li><li><p>九头蛇：无名指按2键；用于取消技能或者平A/技能的后摇，从而打出爆发伤害。</p><ul><li>|| <strong>A+2</strong>|| ：取消A的后摇</li><li>|| <strong>W+2</strong>||：用于取消W的后摇</li></ul></li></ol><h3 id="二、两种光速QA"><a href="#二、两种光速QA" class="headerlink" title="二、两种光速QA"></a>二、两种光速QA</h3><blockquote><p>光速QA为锐雯打出伤害的核心，分为两种，原地光速QA和移动光速QA，前者为后者的基础。</p></blockquote><ol><li>原地光速QA：为上述技能衔接的应用，重复使用|| <strong>A+Q+走</strong> ||即可，注意指针的位置，A和Q时指针都在目标身上，仅仅当要走的时候才移开，且只有A的时候才需要点右键，Q的时候不需要。</li><li>移动光速QA：对原地光速QA的改进，重复使用|| <strong>A+Q+走</strong> ||，在A的时候指针在目标身上，点击右键，攻击后的一瞬间，移动指针点地板同时接Q（最好点两下，防止没点到，要点你想移动穿插的方向），随后再点一下地板另一个位置取消Q的后摇，重复上述操作。</li></ol><h3 id="三、几种连招"><a href="#三、几种连招" class="headerlink" title="三、几种连招"></a>三、几种连招</h3><blockquote><p>以下几套连招，用于爆发伤害，瞬间秒掉C位</p></blockquote><ol><li>九头蛇/大招，无需闪现：近距离秒人<ul><li>一秒五刀<strong>AW2RA</strong>：该连招为基本连招AW、W2、RA的组合</li><li>||<strong>ERQ AW2RA</strong>||</li><li>||<strong>Q ERQ QW2RA</strong>||</li></ul></li><li>九头蛇/大招，有闪现：超远距离秒人<ul><li>||<strong>ERQ F AW2RA</strong>||：ERQ 为基本连招，快速开大/取消R的后摇/用于位移（只需要点地板）；F 闪现拉近距离；AW2RA 一秒五刀。</li><li>||<strong>Q ERQ F QW2RA</strong>||：卡一段Q，用于第二段Q用于取消R的后摇，第三段Q代替A用于控制，随后同样一秒五刀</li></ul></li></ol><blockquote><p>本篇post待改进之处，添加动图/视频</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> LOL </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>思维模型</title>
      <link href="/2019/%E6%80%9D%E7%BB%B4%E6%A8%A1%E5%9E%8B/%E6%80%9D%E7%BB%B4%E6%A8%A1%E5%9E%8B/"/>
      <url>/2019/%E6%80%9D%E7%BB%B4%E6%A8%A1%E5%9E%8B/%E6%80%9D%E7%BB%B4%E6%A8%A1%E5%9E%8B/</url>
      
        <content type="html"><![CDATA[<h2 id="“原因”思维模型"><a href="#“原因”思维模型" class="headerlink" title="“原因”思维模型"></a>“原因”思维模型</h2><blockquote><p>此思维模型概括了两种常见的<strong>思索原因</strong>的模型</p></blockquote><ul><li>其一，<strong>状态原因</strong>思维模型：当遇到各种状态问题时，比如说‘心头压力大，呼吸沉重’的原因是什么，可直接考虑自身属性的因素（如实力、状态）、周围环境的因素。</li><li>其二，<strong>行为原因</strong>思维模型：当思考某件事或某个行为原因时，比如说”为什么要思索’心头压力大，呼吸沉重’的原因是什么“，此‘要’字尤为重要，表现出目的，因此直接考虑该行为的目的和结果即可，即：目的和结果是可以解决当前不舒服的状态，从而使得解决问题更高效。<br><center><img src="https://github.com/Yang-creat/Images/blob/master/%E6%80%9D%E7%B6%AD%E6%A8%A1%E5%9E%8B/why%E6%A8%A1%E5%9E%8B.png?raw=true" alt="原因思维模型"></center></li></ul><h2 id="“API”思维模型"><a href="#“API”思维模型" class="headerlink" title="“API”思维模型"></a>“API”思维模型</h2><blockquote><p>将当我们遇到问题时，解决问题的步骤抽象为一种模型，即<strong>API思维模型</strong>，此处<strong>API</strong>引用了计算机术语‘接口’，即输入一个参数，返回一个参数，其中过程是一定的（由API函数决定），我们遇到一个参数（问题）时，开始调用一个API的过程，即成为API思维模型。</p></blockquote><ul><li>此模型，即<strong>遇到问题时，直接调用已有模型的一种思维方式</strong>。似乎有点抽象，有点像套中套，俄罗斯套娃，举个栗子，比如，当我们需要思考原因时，直接调用上述的<em>原因思维模型</em>，即<strong>API思维模型</strong><br><center><img src="https://github.com/Yang-creat/Images/blob/master/%E6%80%9D%E7%B6%AD%E6%A8%A1%E5%9E%8B/API%E6%A8%A1%E5%9E%8B.png?raw=true" alt="API思维模型"></center></li><li>API思维模型非常重要，它的核心思想是将任何解决问题的方法抽象为API模型，因此<strong>大大地提高解决问题的效率</strong>（直接调用即可），故所需做的就是构建各种思维模型，如原因思维模型。<font color="red"><strong>其实各种知识都是API思维模型，我们所做的就是将其构建成模型并且熟练地使用罢了。</strong></font></li></ul><h2 id="“记忆”思维模型"><a href="#“记忆”思维模型" class="headerlink" title="“记忆”思维模型"></a>“记忆”思维模型</h2><blockquote><p>生活、学习各个方面都离不开记忆，因此有一种好的记忆方法尤为重要，此模型提高了一种行之有效的记忆模型。</p></blockquote><ul><li>当遇到需要记忆的事物之时，比如上述的两种思维模型，必须将其形象化成为一个例子并熟练使用，这样在下次遇到后，举一反三，从而掌握模型。<br><center><img src="https://github.com/Yang-creat/Images/blob/master/%E6%80%9D%E7%B6%AD%E6%A8%A1%E5%9E%8B/%E8%AE%B0%E5%BF%86%E6%A8%A1%E5%9E%8B.png?raw=true" alt="记忆模型"></center></li></ul><blockquote><p>以上各种思维模型中，并非简单的独立或者从属关系，而是互相嵌套，有些复杂，需要重复理解。</p></blockquote><h3 id="下一节预告，以上思维模型在学习之中的应用，敬请期待！"><a href="#下一节预告，以上思维模型在学习之中的应用，敬请期待！" class="headerlink" title="下一节预告，以上思维模型在学习之中的应用，敬请期待！"></a>下一节预告，以上思维模型在学习之中的应用，敬请期待！</h3>]]></content>
      
      
      <categories>
          
          <category> 思维模型 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Hexo+GitHub搭建个人博客总结-2</title>
      <link href="/2019/%E5%B7%A5%E5%85%B7/Hexo/Hexo-GitHub%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%80%BB%E7%BB%93-2/"/>
      <url>/2019/%E5%B7%A5%E5%85%B7/Hexo/Hexo-GitHub%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%80%BB%E7%BB%93-2/</url>
      
        <content type="html"><![CDATA[<h2 id="第二步：主题个性化设置"><a href="#第二步：主题个性化设置" class="headerlink" title="第二步：主题个性化设置"></a>第二步：主题个性化设置</h2><h3 id="一-网页信息设置"><a href="#一-网页信息设置" class="headerlink" title="一. 网页信息设置"></a>一. 网页信息设置</h3><ol><li>网页名称<br>打开站点配置文件<strong>_config</strong>，修改<strong>Site-title</strong>即可。</li><li>post网址名称<br>打开站点配置文件<strong>_config</strong>，设置URL-permalink格式：permalink格式: :year/:month/:day/:category/:title/（其中每项可删减），随后更改scaffolds-post，在其中添加permalink: （此文件为post模板，之后新建的帖子都含有permalink），当通过<strong>hexo n post ‘filename’</strong>新建一个post后，不填写即默认为以上格式。</li></ol><h3 id="二-左侧边栏设置"><a href="#二-左侧边栏设置" class="headerlink" title="二. 左侧边栏设置"></a>二. 左侧边栏设置</h3><ol><li>主页头像<br>打开主题配置文件<strong>theme-_config</strong>文件，修改<strong>avatar: &amp; favicon</strong>所指的文件即可，文件目录为<strong>source-img</strong>，将自己的图片添加进改成相应的名称即可。</li><li>主页文章<br>打开<strong>layout-indexs</strong>编辑修改即可。</li><li>联系方式图标<br>打开<strong>theme-_config</strong>文件，修改*<em>link: *</em>即可。</li><li>左侧目录<br>打开站点配置文件<strong>_config</strong>，在<strong>category &amp; Tag- category_map:</strong>中添加分类的标签名称，若有多级，则按<strong>工具&gt;hexo</strong>格式进行添加，随后在每篇新建的post的<strong>categories</strong>中设置分类即可，如：<br>categories:-工具 -hexo。</li><li><strong>关于</strong>信息<br>打开<strong>source-about-index</strong>进行修改即可，如若无about文件夹，则可以通过<strong>hexo n post “about”</strong>进行建立。</li></ol><h3 id="三-列表设置"><a href="#三-列表设置" class="headerlink" title="三. 列表设置"></a>三. 列表设置</h3><ol><li>搜索功能<br>打开<strong>theme-_config</strong>文件，开启<strong>searchAll</strong>即可。</li><li>列表背景<br>打开<strong>theme-_config</strong>文件，开启<strong>article_bg_img:</strong>，更换图片网址即可。</li></ol><h3 id="四-内容页设置"><a href="#四-内容页设置" class="headerlink" title="四.内容页设置"></a>四.内容页设置</h3><ol><li>字数统计<br>注意：需要安装插件。</li><li>文末声明<br><strong>article_text:</strong>自行添加。</li><li>版权信息<br><strong>copyright:</strong>可关闭开启，无法修改（代码中）。</li><li>底部信息<br><strong>bottom_text:</strong>可修改/关闭。</li></ol><hr><h2 id="所遇问题"><a href="#所遇问题" class="headerlink" title="所遇问题"></a><center>所遇问题</center></h2><ol><li>为什么加了个空格就显示不出生成密匙图片</li><li>true写成ture错误</li><li>注意字数统计缺少插件不能开启，否则无法启动</li><li>如何更改网页地址为<a href="http://www.shuoit.net" target="_blank" rel="noopener">www.shuoit.net</a></li><li>menu菜单下有几个功能页，这些功能页如何实现的<blockquote><p>通过特定的修改config中相对应的名称/以及建立相对应的文件夹即可。内容在哪里修改：通过修改theme-config-menu项冒号后面的名称，即可指向Blog文件下source中对应名称的文件（可通过hexo new page 文件名 新建该类型文件？？还可以新建其他类型的文件吗，对应的功能是什么，注意：只有通过改方法建立的文件夹才能导入到对应标签的网页中），因此通过修改此文件可以修改各标签所对应的内容。？？文件内容格式如何优化</p></blockquote></li><li>每次修改配置内容后需要重新hexo s启动</li><li>public文件是怎么出来的：在将本地配置上传至远程服务器时，各文件保存在public中</li><li>网站上所有格式的修改应当在theme-config中完成</li><li>deploy_git中文件应该是push到git中的文件</li><li>JSON格式是什么：基于JS编程的一个子集，是什么鬼东西</li><li>permalink：为永久链接，意为指向一个特定的网络日志的标识符</li><li>scaffolds，为新建页面的模板，新建post/page/draft都是根据此模板完成的，可在其中加入一些默认值</li><li>category &amp;Tag设置的是什么</li><li>lang：en  设置的是什么</li><li>url设置的域名有什么用</li><li>hexo提交到github后会自动将about文件转换为html文件</li><li>public文件夹中存储着当hexo上传文件至git后，产生的source中的各文件的网址</li><li>theme-config中可设置menu分类的格式，返回到各路径中的文件</li><li>每个文档可设置一些默认属性，如名称/日期/标签/链接/分类</li><li>可以让menu中分类标签指向各种类吗：通过建立对应文件，设值type即可</li><li>将图片放在theme-source-img下即可</li></ol>]]></content>
      
      
      <categories>
          
          <category> 工具 </category>
          
          <category> Hexo </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Hexo+GitHub搭建个人博客总结-1</title>
      <link href="/2019/%E5%B7%A5%E5%85%B7/Hexo/Hexo+GitHub%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%80%BB%E7%BB%93-1/"/>
      <url>/2019/%E5%B7%A5%E5%85%B7/Hexo/Hexo+GitHub%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%80%BB%E7%BB%93-1/</url>
      
        <content type="html"><![CDATA[<h2 id="第一步：配置环境准备"><a href="#第一步：配置环境准备" class="headerlink" title="第一步：配置环境准备"></a>第一步：配置环境准备</h2><hr><h3 id="一-软件准备"><a href="#一-软件准备" class="headerlink" title="一. 软件准备"></a>一. 软件准备</h3><ol><li>下载软件:<br><a href="https://nodejs.org/en/" target="_blank" rel="noopener">Node.js</a> &amp; <a href="https://git-scm.com/downloads" target="_blank" rel="noopener">Git</a>（建议先学习<a href="https://www.bilibili.com/video/av10475153" target="_blank" rel="noopener">Github</a>)<br> 记住下载目录，一般管理好电脑目录，比如<br><center><img src="https://github.com/Yang-creat/Images/blob/master/Hexo%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA%E6%88%AA%E5%9B%BE/%E4%B8%8B%E8%BD%BD%E7%9B%AE%E5%BD%95.png?raw=true" alt="下载目录"></center></li><li>安装软件<br> 对于Node.js，注意此步选择第二项，可在Window10下的powershell命令行中运行 <br><center><img src="https://github.com/Yang-creat/Images/blob/master/Hexo%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA%E6%88%AA%E5%9B%BE/Node.js%E5%AE%89%E8%A3%85.png?raw=true" alt="Node.js安装"></center></li><li>检测版本<br>按住Win + R输入cmd，打开windows命令行，依次输入<strong>node -v</strong> / <strong>npm -v</strong>/ <strong>git –version</strong>查看安装软件的版本</li><li>完成安装 <br>如若正确安装，应当显示版本号<br><center><img src="https://github.com/Yang-creat/Images/blob/master/Hexo%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA%E6%88%AA%E5%9B%BE/%E7%89%88%E6%9C%AC%E6%9F%A5%E8%AF%A2.png?raw=true" alt="版本号"></center></li></ol><h3 id="二-GitHub网站配置"><a href="#二-GitHub网站配置" class="headerlink" title="二.GitHub网站配置"></a>二.GitHub网站配置</h3><blockquote><p>完成上一步之后，接下来时GItHub网站的配置</p></blockquote><ol><li><p>注册账号<br><br> 登录网站<a href="https://github.com/" target="_blank" rel="noopener">GitHub</a>，注册账号</p></li><li><p>SSH授权<br><br> 新建好仓库后，即可clone和fork他人的开源代码，但若是需将文件上传到github还需要SSH授权，步骤如下：</p><ul><li>打开Git Bash，输入<strong>ssh-keygen -t rsa</strong> 按3下回车，如图所示：<center><br><img src="https://github.com/Yang-creat/Images/blob/master/Hexo%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA%E6%88%AA%E5%9B%BE/%E7%94%9F%E6%88%90%E5%AF%86%E5%8C%99.png?raw=true" alt="生成密匙"> </center><br>接下来将会在C:\Users\Administrator.ssh目录下生成到id_rsa和id_rsa.pub两个文件，id_rsa是密钥，id_rsa.pub是公钥，将id_rsa.pub的内容添加到GitHub上，本地的id_rsa密钥才能跟GitHub上的id_rsa.pub公钥进行配对，即可授权成功 </li><li>登录GItHUb，点击右上角头像-setting-SSH and GPG keys-复制idrsa.pub中的内容即可<br><center><img src="https://github.com/Yang-creat/Images/blob/master/Hexo%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA%E6%88%AA%E5%9B%BE/GitHub%E4%B8%ADSSH%E8%AE%BE%E7%BD%AE.png?raw=true" alt="SSH设置"></center><center><br><img src="https://github.com/Yang-creat/Images/blob/master/Hexo%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA%E6%88%AA%E5%9B%BE/%E5%A4%8D%E5%88%B6%E5%AF%86%E5%8C%99.png?raw=true" alt="密匙添加"></center></li><li>密匙设置成功后，再次打开Git Bash中输入<strong>ssh -T <a href="mailto:git@github.com" target="_blank" rel="noopener">git@github.com</a></strong>，出现以下提示即设置成功<br><center><img src="https://github.com/Yang-creat/Images/blob/master/Hexo%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA%E6%88%AA%E5%9B%BE/%E5%AF%86%E5%8C%99%E9%AA%8C%E8%AF%81%E6%88%90%E5%8A%9F.png?raw=true" alt="设置成功"></center></li></ul></li><li><p>New Repository<br> 点击New按钮新建Repository<center><br><img src="https://github.com/Yang-creat/Images/blob/master/Hexo%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA%E6%88%AA%E5%9B%BE/github%E6%96%B0%E5%BB%BA%E4%B8%AA%E4%BA%BApage.png?raw=true" alt="新建仓库"></center><br> <em>注意：仓库名必须为</em> <strong><em>用户名+github.io</em></strong></p></li></ol><h3 id="三-本地Blog配置"><a href="#三-本地Blog配置" class="headerlink" title="三. 本地Blog配置"></a>三. 本地Blog配置</h3><blockquote><p>现在开始搭建本地博客，首先新建一个文件夹Blog，打开文件夹，按住Shift后点右键打开Poweshell</p></blockquote><ol><li><p>安装Hexo</p><ul><li>输入指令 <strong>npm install -g hexo</strong><br><center><img src="https://github.com/Yang-creat/Images/blob/master/Hexo%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA%E6%88%AA%E5%9B%BE/hexo-g.png?raw=true" alt="安装hexo"></center></li><li>再次输入指令** npm install hexo –save** 保存文件<br><center><img src="https://github.com/Yang-creat/Images/blob/master/Hexo%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA%E6%88%AA%E5%9B%BE/npm%20%E4%BF%9D%E5%AD%98%E6%96%87%E4%BB%B6.png?raw=true" alt="保存hexo"></center></li><li>输入<strong>hexo -v</strong>查看是否安装成功<br><center><img src="https://github.com/Yang-creat/Images/blob/master/Hexo%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA%E6%88%AA%E5%9B%BE/hexo%E7%89%88%E6%9C%AC%E6%9F%A5%E7%9C%8B.png?raw=true" alt="查看hexo版本"></center></li><li>初始化hexo：<strong>hexo init</strong> （<em>注意：需要在其中新建一个文件夹，将生成的hexo文件</em>）</li></ul></li><li><p>启动本地Hexo服务端</p><ul><li>输入<strong>hexo s</strong>启动本地Hexo服务器，网址输入<strong>locahost：4000</strong> 即可进入本地服务器</li></ul></li><li><p>写帖子</p><ul><li>通过<strong>hexo n post “”</strong>新建帖子（<em>帖子位于source文件夹下</em>）</li></ul></li></ol><h3 id="四-上传至远程Blog"><a href="#四-上传至远程Blog" class="headerlink" title="四.上传至远程Blog"></a>四.上传至远程Blog</h3><blockquote><p>本地写好的博客需要上传至github个人主页中，步骤如下：</p></blockquote><ol><li>修改站点配置文件_config<ul><li>deploy: <ul><li>type: git</li><li>repo（<em>手动添加<em>） 仓库地址，如：</em><a href="https://github.com/Yang-creat/Yang-creat.github.io" target="_blank" rel="noopener">https://github.com/Yang-creat/Yang-creat.github.io</a></em><br><center><img src="https://github.com/Yang-creat/Images/blob/master/Hexo%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA%E6%88%AA%E5%9B%BE/%E4%BF%AE%E6%94%B9_config.png?raw=true" alt="修改文件配置"></center></li></ul></li></ul></li><li>保存修改设置<ul><li>输入<strong>npm install hexo-deployer-git –save</strong></li></ul></li><li>上传<ul><li>输入<strong>hexo g</strong>生成文件</li><li>输入<strong>hexo d</strong>配置远程服务器<br><br><em>注意：修改文件后需要 <strong>hexo clean</strong> 清除public再次重新配置</em></li></ul></li><li>登录远程博客<ul><li>网站输入<strong>http://名称.github.io</strong>即可登录网站。</li></ul></li></ol>]]></content>
      
      
      <categories>
          
          <category> 工具 </category>
          
          <category> Hexo </category>
          
      </categories>
      
      
    </entry>
    
    
  
  
</search>
